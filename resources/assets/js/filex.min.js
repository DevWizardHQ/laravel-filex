!function(window,document){"use strict";function showErrorMessage(message,componentId=null,timeout=5e3){showNotification(message,"error",componentId,timeout)}function showSuccessMessage(message,componentId=null,timeout=3e3){showNotification(message,"success",componentId,timeout)}function showNotification(message,type="info",componentId=null,timeout=3e3){let container=document.getElementById("filex-notifications-container");container||(container=document.createElement("div"),container.id="filex-notifications-container",container.className="filex-notifications-container",document.body.appendChild(container));const notification=document.createElement("div");notification.className=`filex-notification filex-notification--${type}`;const icon=function(type){const icons={error:'<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor">\n                <circle cx="12" cy="12" r="10"/>\n                <path fill="white" d="M12 8v4M12 16h.01" stroke="white" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>\n            </svg>',success:'<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor">\n                <circle cx="12" cy="12" r="10"/>\n                <path fill="white" d="M9 12l2 2 4-4" stroke="white" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>\n            </svg>',warning:'<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor">\n                <path d="M12 2L1 21h22L12 2zm0 3.5L19.5 19h-15L12 5.5zM11 10v4h2v-4h-2zm0 6v2h2v-2h-2z"/>\n            </svg>',info:'<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor">\n                <circle cx="12" cy="12" r="10"/>\n                <path fill="white" d="M12 8v8M12 16h.01" stroke="white" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>\n            </svg>'};return icons[type]||icons.info}(type);notification.innerHTML=`\n            <div class="filex-notification__content">\n                <div class="filex-notification__icon">${icon}</div>\n                <div class="filex-notification__message">${message}</div>\n                <button class="filex-notification__close" type="button" aria-label="Close notification">Ã—</button>\n            </div>\n            ${timeout>0?'<div class="filex-notification__progress"></div>':""}\n        `;if(notification.querySelector(".filex-notification__close").addEventListener("click",(()=>removeNotification(notification))),container.appendChild(notification),timeout>0){const progressBar=notification.querySelector(".filex-notification__progress");progressBar&&(progressBar.style.width="100%",progressBar.style.transition=`width ${timeout}ms linear`,setTimeout((()=>{progressBar.style.width="0%"}),10)),setTimeout((()=>{notification.parentNode&&removeNotification(notification)}),timeout)}return componentId&&"error"===type&&function(componentId,message){const statusElement=document.getElementById(componentId+"-status");if(statusElement){const errorText=statusElement.querySelector(".error-text"),errorMessage=statusElement.querySelector(".error-message");errorText&&errorMessage&&(errorText.style.display="inline",errorMessage.textContent=message,statusElement.style.display="block")}}(componentId,message),notification}function removeNotification(notification){notification&&notification.parentNode&&(notification.classList.add("filex-notification--sliding-out"),setTimeout((()=>{notification.parentNode&&notification.remove()}),300))}function makeAjaxRequest(url,options={}){const finalOptions={...{method:"GET",headers:{"Content-Type":"application/json","X-CSRF-TOKEN":getCSRFToken(),"X-Requested-With":"XMLHttpRequest"},timeout:3e4},...options},controller=new AbortController,timeoutId=setTimeout((()=>controller.abort()),finalOptions.timeout);return finalOptions.signal=controller.signal,fetch(url,finalOptions).then((response=>{clearTimeout(timeoutId);const contentType=response.headers.get("content-type");if(!response.ok){if(contentType&&contentType.includes("application/json"))return response.json().then((data=>{throw new Error(data.message||data.error||`Server error: ${response.status}`)}));throw new Error(`HTTP ${response.status}: ${response.statusText}`)}return contentType&&contentType.includes("application/json")?response.json():response.text()})).catch((error=>{throw clearTimeout(timeoutId),"AbortError"===error.name?new Error("Request timed out. Please try again."):error.message?error:new Error("Network error. Please check your connection and try again.")}))}function initializeFilex(){if(window.filexInitialized)return;if(window.filexInitialized=!0,"undefined"==typeof Dropzone)return void console.error("Dropzone.js library not loaded");Dropzone.autoDiscover=!1;const filexElements=document.querySelectorAll(".filex-uploader[data-component-id]");0!==filexElements.length&&filexElements.forEach((function(filexElement){const componentId=filexElement.dataset.componentId;if("true"===filexElement.getAttribute("data-filex-initialized")||filexElement.dropzone)return;const hiddenInputsContainer=document.getElementById(componentId+"-hidden-inputs"),statusElement=document.getElementById(componentId+"-status");if(!filexElement)return void console.error("Filex element not found:",componentId);const parentForm=filexElement.closest("form"),submitButtons=parentForm?parentForm.querySelectorAll('button[type="submit"], input[type="submit"]'):[];let activeUploads=0,uploadedFiles=[],failedFiles=[],retryCount={};const rawConfig=filexElement.dataset.config;let config={};if(rawConfig)try{config=JSON.parse(rawConfig)}catch(e){console.warn("Failed to parse Filex config, using defaults:",e)}config={componentId:config.componentId||filexElement.dataset.componentId,name:config.name||filexElement.dataset.name||"files",multiple:void 0!==config.multiple?config.multiple:"true"===filexElement.dataset.multiple,required:void 0!==config.required?config.required:filexElement.hasAttribute("data-required"),disabled:void 0!==config.disabled?config.disabled:filexElement.hasAttribute("data-disabled"),readonly:void 0!==config.readonly?config.readonly:filexElement.hasAttribute("data-readonly"),maxFiles:config.maxFiles||(filexElement.dataset.maxFiles?parseInt(filexElement.dataset.maxFiles):null),maxSize:config.maxSize||parseFloat(filexElement.dataset.maxFilesize)||10,minSize:config.minSize||null,accept:config.accept||filexElement.dataset.acceptedFiles||null,autoProcess:void 0===config.autoProcess||config.autoProcess,parallelUploads:config.parallelUploads||2,chunkSize:config.chunkSize||1048576,retries:config.retries||3,timeout:config.timeout||3e4,validation:config.validation||{rules:JSON.parse(filexElement.dataset.frontendRules||"[]"),enabled:"true"===filexElement.dataset.validationEnabled},messages:config.messages||{},debug:config.debug||!1,thumbnailWidth:config.thumbnailWidth||120,thumbnailHeight:config.thumbnailHeight||120,thumbnailMethod:config.thumbnailMethod||"contain",events:config.events||{}};const existingInputs=hiddenInputsContainer?hiddenInputsContainer.querySelectorAll(".existing-file-input"):[],existingFiles=[...Array.from(existingInputs).map((input=>input.value)),...config.existingFiles||[]].filter(Boolean);existingFiles&&existingFiles.length>0&&(uploadedFiles=[...new Set(existingFiles)]);const hiddenInputName=config.multiple?config.name+"[]":config.name,dropzoneConfig={url:window.filexRoutes?window.filexRoutes.upload:"/filex/upload/temp",method:"POST",headers:{"X-CSRF-TOKEN":getCSRFToken()},paramName:"file",maxFilesize:999999,maxFiles:config.maxFiles,acceptedFiles:config.accept,addRemoveLinks:!0,autoProcessQueue:config.autoProcess,parallelUploads:config.parallelUploads,uploadMultiple:!1,chunking:!0,chunkSize:config.chunkSize,parallelChunkUploads:!1,retryChunks:!0,retryChunksLimit:config.retries,forceChunking:function(file){return file.size>52428800},retries:config.retries,timeout:config.timeout,thumbnailWidth:config.thumbnailWidth,thumbnailHeight:config.thumbnailHeight,thumbnailMethod:config.thumbnailMethod,dictRemoveFile:config.messages.dictRemoveFile||"",dictDefaultMessage:config.messages.dictDefaultMessage||"Drop files here or click to upload",dictFileTooBig:(config.messages.dictFileTooBig||"File is too big (:filesize MB). Max filesize: :maxFilesize MB.").replace(":maxFilesize",config.maxSize).replace(":maxfilesize",config.maxSize),dictInvalidFileType:config.messages.dictInvalidFileType||"You cannot upload files of this type.",dictResponseError:config.messages.dictResponseError||"Server error occurred during upload. Please try again.",dictMaxFilesExceeded:config.messages.dictMaxFilesExceeded||"You cannot upload any more files.",accept:function(file,done){done()},init:function(){const dz=this;async function applyValidationRule(file,rule){if("string"!=typeof rule)return null;const[ruleName,ruleValue]=rule.includes(":")?rule.split(":",2):[rule,null];switch(ruleName){case"required":case"file":return null;case"image":return file.type.startsWith("image/")?null:"File must be an image";case"mimes":if(ruleValue){const allowedMimes=ruleValue.split(",").map((ext=>ext.trim())),fileExt=file.name.toLowerCase().split(".").pop();if(!allowedMimes.includes(fileExt))return`File type not allowed. Allowed types: ${allowedMimes.join(", ")}`}return null;case"max":if(ruleValue){const maxSizeKB=parseInt(ruleValue);if(file.size>1024*maxSizeKB){const fileSizeMB=(file.size/1048576).toFixed(2),maxSizeMB=(maxSizeKB/1024).toFixed(2);return(config.messages.dictFileTooBig||"File is too big (:filesize MB). Max filesize: :maxFilesize MB.").replace(":filesize",fileSizeMB).replace(":maxFilesize",maxSizeMB).replace(":maxfilesize",maxSizeMB)}}return null;case"min":if(ruleValue){const minSizeKB=parseInt(ruleValue);if(file.size<1024*minSizeKB)return`File too small. Minimum size: ${formatFileSize(1024*minSizeKB)}`}return null;case"size":if(ruleValue){const exactSizeKB=parseInt(ruleValue);if(file.size!==1024*exactSizeKB)return`File must be exactly ${formatFileSize(1024*exactSizeKB)}`}return null;case"dimensions":return file.type.startsWith("image/")&&ruleValue?await function(file,dimensionRule){return new Promise((resolve=>{const img=new Image,url=URL.createObjectURL(file);img.onload=function(){URL.revokeObjectURL(url);const dimensions=function(dimensionRule){const dimensions={},parts=dimensionRule.split(",");for(const part of parts){const[key,value]=part.split("=");key&&value&&(dimensions[key.trim()]=parseFloat(value.trim()))}return dimensions}(dimensionRule),errors=[];if(dimensions.min_width&&img.width<dimensions.min_width&&errors.push(`Image width too small. Minimum: ${dimensions.min_width}px`),dimensions.max_width&&img.width>dimensions.max_width&&errors.push(`Image width too large. Maximum: ${dimensions.max_width}px`),dimensions.min_height&&img.height<dimensions.min_height&&errors.push(`Image height too small. Minimum: ${dimensions.min_height}px`),dimensions.max_height&&img.height>dimensions.max_height&&errors.push(`Image height too large. Maximum: ${dimensions.max_height}px`),dimensions.width&&img.width!==dimensions.width&&errors.push(`Image width must be exactly ${dimensions.width}px`),dimensions.height&&img.height!==dimensions.height&&errors.push(`Image height must be exactly ${dimensions.height}px`),dimensions.ratio){const actualRatio=img.width/img.height;Math.abs(actualRatio-dimensions.ratio)>.01&&errors.push(`Image aspect ratio must be ${dimensions.ratio}`)}resolve(errors.join("; ")||null)},img.onerror=function(){URL.revokeObjectURL(url),resolve("Invalid image file")},img.src=url}))}(file,ruleValue):null;case"mimetypes":if(ruleValue){const allowedMimeTypes=ruleValue.split(",").map((type=>type.trim()));if(!allowedMimeTypes.includes(file.type))return`File MIME type not allowed. Allowed types: ${allowedMimeTypes.join(", ")}`}return null;case"between":if(ruleValue){const[minSize,maxSize]=ruleValue.split(",").map((size=>parseInt(size.trim()))),fileSizeKB=Math.round(file.size/1024);if(fileSizeKB<minSize||fileSizeKB>maxSize)return`File size must be between ${formatFileSize(1024*minSize)} and ${formatFileSize(1024*maxSize)}`}return null;default:return config.debug&&console.warn("Unknown validation rule:",ruleName),null}}function formatFileSize(bytes){return bytes>=1048576?Math.round(bytes/1048576*100)/100+" MB":bytes>=1024?Math.round(bytes/1024*100)/100+" KB":bytes+" bytes"}function getEstimatedFileSize(extension){const sizeEstimates={jpg:5e5,jpeg:5e5,png:8e5,gif:3e5,bmp:2e6,webp:4e5,svg:5e4,pdf:1e6,doc:5e5,docx:5e5,txt:1e4,rtf:1e5,mp4:5e6,avi:8e6,mov:6e6,wmv:4e6,flv:3e6,webm:4e6,mp3:3e6,wav:1e7,ogg:25e5,aac:2e6,flac:8e6,zip:2e6,rar:2e6,"7z":15e5,tar:25e5,default:1e5};return sizeEstimates[extension]||sizeEstimates.default}dz.on("init",(function(){existingFiles&&0!==existingFiles.length&&existingFiles.forEach((function(filePath,index){const fileName=filePath.split("/").pop(),extension=fileName.split(".").pop().toLowerCase();let fileType="";fileType=["jpg","jpeg","png","gif","bmp","webp","svg"].includes(extension)?"image/"+("jpg"===extension?"jpeg":extension):["pdf","doc","docx","txt","rtf"].includes(extension)?"application/"+extension:["mp4","avi","mov","wmv","flv","webm"].includes(extension)?"video/"+extension:["mp3","wav","ogg","aac","flac"].includes(extension)?"audio/"+extension:"application/octet-stream";const mockFile={name:fileName,size:getEstimatedFileSize(extension),type:fileType,accepted:!0,processing:!1,upload:{progress:100},status:Dropzone.SUCCESS,tempPath:filePath,isExisting:!0};if(window.filexRoutes&&window.filexRoutes.fileInfo){makeAjaxRequest(window.filexRoutes.fileInfo.replace("__FILEPATH__",encodeURIComponent(filePath)),{method:"GET"}).then((data=>{if(data.success&&data.size&&(mockFile.size=data.size,mockFile.previewElement)){const sizeElement=mockFile.previewElement.querySelector(".dz-size span");sizeElement&&(sizeElement.textContent=formatFileSize(data.size))}})).catch((error=>{if(console.warn("Failed to fetch file info for existing file:",error.message),mockFile.size=getEstimatedFileSize(extension),mockFile.previewElement){const sizeElement=mockFile.previewElement.querySelector(".dz-size span");sizeElement&&(sizeElement.textContent=formatFileSize(mockFile.size))}}))}else mockFile.size=getEstimatedFileSize(extension);dz.emit("addedfile",mockFile),dz.emit("complete",mockFile),setTimeout((function(){if(mockFile.previewElement){const imageElement=mockFile.previewElement.querySelector(".dz-image");if(imageElement){const iconSvg=getFileIconSvg(extension);imageElement.innerHTML=iconSvg}const progressElement=mockFile.previewElement.querySelector(".dz-progress");progressElement&&(progressElement.style.display="none"),mockFile.previewElement.classList.remove("dz-error","dz-processing"),mockFile.previewElement.classList.add("dz-success","filex-preview-existing");const errorElement=mockFile.previewElement.querySelector(".dz-error-message");errorElement&&(errorElement.style.display="none");const successMark=mockFile.previewElement.querySelector(".dz-success-mark");successMark&&(successMark.style.display="flex",successMark.style.visibility="visible",successMark.style.opacity="1");const errorMark=mockFile.previewElement.querySelector(".dz-error-mark");errorMark&&(errorMark.style.display="none",errorMark.style.visibility="hidden",errorMark.style.opacity="0")}}),300);const removeButton=mockFile.previewElement?mockFile.previewElement.querySelector(".dz-remove"):null;removeButton&&removeButton.addEventListener("click",(function(e){e.preventDefault(),e.stopPropagation(),dz.removeFile(mockFile)}))}))})),dz.on("addedfile",(async function(file){if(file.previewElement&&!file.isExisting){file.previewElement.classList.add("filex-preview-new");const successMark=document.createElement("div");successMark.className="dz-success-mark",successMark.innerHTML='<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" width="16" height="16"><circle cx="12" cy="12" r="10" fill="#28a745"/><path fill="white" d="M9 12l2 2 4-4" stroke="white" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/></svg>',successMark.style.display="none",successMark.style.visibility="hidden",file.previewElement.appendChild(successMark);const errorMark=document.createElement("div");errorMark.className="dz-error-mark",errorMark.innerHTML='<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" width="16" height="16"><circle cx="12" cy="12" r="10" fill="#dc3545"/><path fill="white" d="M12 8v4M12 16h.01" stroke="white" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/></svg>',errorMark.style.display="none",errorMark.style.visibility="hidden",file.previewElement.appendChild(errorMark)}if(!file.isExisting){const validationErrors=await async function(file){const errors=[];if(!config.validation.enabled)return errors;if(config.validation.rules&&config.validation.rules.length>0)for(const rule of config.validation.rules){const ruleError=await applyValidationRule(file,rule);ruleError&&errors.push(ruleError)}if(file.size>1024*config.maxSize*1024){const fileSizeMB=(file.size/1048576).toFixed(2),message=(config.messages.dictFileTooBig||"File is too big (:filesize MB). Max filesize: :maxFilesize MB.").replace(":filesize",fileSizeMB).replace(":maxFilesize",config.maxSize).replace(":maxfilesize",config.maxSize);errors.push(message)}if(config.minSize&&file.size<1024*config.minSize*1024&&errors.push(`File is too small. Minimum size: ${config.minSize}MB`),config.accept){const acceptedTypes=config.accept.split(",").map((type=>type.trim()));let isValidType=!1;for(const acceptedType of acceptedTypes)if(acceptedType.includes("*")){const pattern=acceptedType.replace("*","");if(file.type&&file.type.startsWith(pattern)){isValidType=!0;break}}else if(acceptedType.startsWith(".")){if("."+file.name.split(".").pop().toLowerCase()===acceptedType.toLowerCase()){isValidType=!0;break}}else if(file.type===acceptedType){isValidType=!0;break}isValidType||errors.push("File type not allowed")}return errors}(file);if(validationErrors&&validationErrors.length>0){if(!1!==config.showErrorNotifications&&showErrorMessage(`Validation failed for ${file.name}: ${validationErrors.join(", ")}`,componentId,config.errorTimeout),file.previewElement){file.previewElement.classList.add("dz-error");const errorElement=file.previewElement.querySelector(".dz-error-message");errorElement&&(errorElement.textContent=validationErrors.join(", "),errorElement.style.display="block");const errorMark=file.previewElement.querySelector(".dz-error-mark"),successMark=file.previewElement.querySelector(".dz-success-mark");errorMark&&(errorMark.style.display="flex",errorMark.style.visibility="visible",errorMark.style.opacity="1"),successMark&&(successMark.style.display="none",successMark.style.visibility="hidden",successMark.style.opacity="0")}return failedFiles.find((f=>f.name===file.name))||failedFiles.push({name:file.name,error:validationErrors.join(", "),file:file,type:"validation"}),dz.removeFile(file),void updateStatus()}if(file.previewElement){file.previewElement.classList.remove("dz-error");const errorElement=file.previewElement.querySelector(".dz-error-message");errorElement&&(errorElement.style.display="none",errorElement.textContent="");const errorMark=file.previewElement.querySelector(".dz-error-mark");errorMark&&(errorMark.style.display="none",errorMark.style.visibility="hidden",errorMark.style.opacity="0")}}if(file.status===Dropzone.SUCCESS||file.isExisting||(activeUploads++,updateFormState(),updateStatus()),!file.type||!file.type.startsWith("image/")){const iconSvg=getFileIconSvg(file.name.split(".").pop().toLowerCase()),imageElement=file.previewElement?file.previewElement.querySelector(".dz-image"):null;imageElement&&(imageElement.innerHTML=iconSvg)}if(file.previewElement){const retryButton=document.createElement("button");retryButton.type="button",retryButton.className="dz-retry",retryButton.style.display="none",retryButton.title="Retry upload",retryButton.innerHTML='<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" width="14" height="14"><path fill="currentColor" d="M17.65,6.35C16.2,4.9 14.21,4 12,4A8,8 0 0,0 4,12A8,8 0 0,0 12,20C15.73,20 18.84,17.45 19.73,14H17.65C16.83,16.33 14.61,18 12,18A6,6 0 0,1 6,12A6,6 0 0,1 12,6C13.66,6 15.14,6.69 16.22,7.78L13,11H20V4L17.65,6.35Z"/></svg>',retryButton.addEventListener("click",(function(e){e.preventDefault(),e.stopPropagation(),retryUpload(file)})),file.previewElement.appendChild(retryButton)}})),dz.on("success",(function(file,response){if(response&&response.success&&response.tempPath){if(file.tempPath=response.tempPath,file.originalName=response.originalName,file.serverSize=response.size,config.showSuccessMessages&&showSuccessMessage(`${file.name} uploaded successfully`,componentId,config.successTimeout),file.status=Dropzone.SUCCESS,file.previewElement){const preview=file.previewElement,progressEl=preview.querySelector(".dz-progress"),errorEl=preview.querySelector(".dz-error-message"),retryBtn=preview.querySelector(".dz-retry"),successMark=preview.querySelector(".dz-success-mark"),errorMark=preview.querySelector(".dz-error-mark");preview.classList.remove("dz-processing","dz-error"),preview.classList.add("dz-success"),setTimeout((()=>{preview&&file.status===Dropzone.SUCCESS&&(preview.classList.remove("dz-processing","dz-error"),preview.classList.add("dz-success"))}),100),progressEl&&(progressEl.style.display="none"),errorEl&&(errorEl.style.display="none",errorEl.textContent=""),retryBtn&&(retryBtn.style.display="none"),successMark&&(successMark.style.display="flex",successMark.style.visibility="visible",successMark.style.opacity="1"),errorMark&&(errorMark.style.display="none",errorMark.style.visibility="hidden",errorMark.style.opacity="0")}uploadedFiles.includes(response.tempPath)||uploadedFiles.push(response.tempPath),updateHiddenInputs();const failedIndex=failedFiles.findIndex((f=>f.name===file.name));failedIndex>-1&&failedFiles.splice(failedIndex,1),delete retryCount[file.name]}else if(file.previewElement){file.previewElement.classList.add("dz-error");const errorMsg=response&&response.message?response.message:"Upload failed",errorElement=file.previewElement.querySelector(".dz-error-message");errorElement&&(errorElement.textContent=errorMsg)}activeUploads--,updateFormState(),updateStatus()})),dz.on("error",(function(file,errorMessage,xhr){activeUploads--;let finalErrorMessage=errorMessage;if("object"==typeof errorMessage)finalErrorMessage=errorMessage.message?errorMessage.message:errorMessage.error?errorMessage.error:"Upload failed";else if("string"==typeof errorMessage)try{const parsed=JSON.parse(errorMessage);finalErrorMessage=parsed.message||parsed.error||errorMessage}catch(e){finalErrorMessage=errorMessage}if("string"==typeof finalErrorMessage&&finalErrorMessage.includes(":statusCode")&&(finalErrorMessage=xhr&&xhr.status?finalErrorMessage.replace(":statusCode",xhr.status):"Server error occurred during upload"),xhr&&xhr.status)switch(xhr.status){case 413:finalErrorMessage="File is too large for upload";break;case 422:finalErrorMessage=finalErrorMessage.includes("Server responded with")?"File validation failed":finalErrorMessage;break;case 429:finalErrorMessage="Too many upload attempts. Please wait and try again.";break;case 500:finalErrorMessage="Server error during upload. Please try again.";break;case 0:finalErrorMessage="Network error. Please check your connection.";break;default:finalErrorMessage.includes("Server responded with")&&finalErrorMessage.includes("code")&&(finalErrorMessage=`Server error (${xhr.status}): Please try again`)}else finalErrorMessage.includes(":statusCode")&&(finalErrorMessage="Server error occurred during upload");const isValidationError=finalErrorMessage.includes("File is too big")||finalErrorMessage.includes("File too large")||finalErrorMessage.includes("File type not allowed")||finalErrorMessage.includes("validation failed");if(!1===config.showErrorNotifications||isValidationError||showErrorMessage(`Upload failed for ${file.name}: ${finalErrorMessage}`,componentId,config.errorTimeout),failedFiles.find((f=>f.name===file.name))||failedFiles.push({name:file.name,error:finalErrorMessage,file:file}),file.previewElement){const preview=file.previewElement,retryBtn=preview.querySelector(".dz-retry"),errorMark=preview.querySelector(".dz-error-mark"),successMark=preview.querySelector(".dz-success-mark"),errorElement=preview.querySelector(".dz-error-message");preview.classList.remove("dz-success","dz-processing"),preview.classList.add("dz-error"),errorElement&&(errorElement.textContent=finalErrorMessage,errorElement.style.display="block"),retryBtn&&(retryBtn.style.display="flex"),errorMark&&(errorMark.style.display="flex",errorMark.style.visibility="visible",errorMark.style.opacity="1"),successMark&&(successMark.style.display="none",successMark.style.visibility="hidden",successMark.style.opacity="0")}updateFormState(),updateStatus()})),dz.on("complete",(function(file){file.previewElement&&(file.status===Dropzone.SUCCESS?(file.previewElement.classList.remove("dz-processing","dz-error"),file.previewElement.classList.add("dz-success")):file.status===Dropzone.ERROR&&(file.previewElement.classList.remove("dz-processing","dz-success"),file.previewElement.classList.add("dz-error")))})),dz.on("removedfile",(function(file){if(file.tempPath){const index=uploadedFiles.indexOf(file.tempPath);if(index>-1&&uploadedFiles.splice(index,1),!file.isExisting&&window.filexRoutes&&window.filexRoutes.delete){const filename=file.tempPath.split("/").pop();makeAjaxRequest(window.filexRoutes.delete.replace("__FILENAME__",encodeURIComponent(filename)),{method:"DELETE"}).then((response=>{response.success?(config.debug||config.showSuccessMessages)&&showSuccessMessage(`File ${file.name} deleted successfully`,componentId,config.successTimeout):!1!==config.showErrorNotifications&&showErrorMessage(response.message||"Failed to delete file from server",componentId,config.errorTimeout)})).catch((error=>{console.error("Failed to delete temp file:",error),!1!==config.showErrorNotifications&&showErrorMessage(`Failed to delete ${file.name}: ${error.message}`,componentId,config.errorTimeout)}))}}const failedIndex=failedFiles.findIndex((f=>f.name===file.name));failedIndex>-1&&failedFiles.splice(failedIndex,1),updateHiddenInputs(),updateStatus()})),dz.on("maxfilesexceeded",(function(file){const maxFiles=config.maxFiles||"unlimited";!1!==config.showErrorNotifications&&showErrorMessage(`Maximum number of files exceeded. Limit: ${maxFiles}`,componentId,config.errorTimeout),dz.removeFile(file)}))}};if(filexElement.dropzone)return;filexElement.setAttribute("data-filex-initialized","true");const myFilex=new Dropzone(filexElement,dropzoneConfig);function retryUpload(file){const currentRetries=retryCount[file.name]||0;if(currentRetries>=3)return void(!1!==config.showErrorNotifications&&showErrorMessage(`Maximum retry attempts reached for ${file.name}`,componentId,config.errorTimeout));retryCount[file.name]=currentRetries+1;const retryButton=file.previewElement?file.previewElement.querySelector(".dz-retry"):null;retryButton&&(retryButton.style.display="none"),file.status=Dropzone.QUEUED,file.previewElement&&file.previewElement.classList.remove("dz-error");const failedIndex=failedFiles.findIndex((f=>f.name===file.name));failedIndex>-1&&failedFiles.splice(failedIndex,1),activeUploads++,updateFormState(),updateStatus(),myFilex.processFile(file)}function updateHiddenInputs(){if(!hiddenInputsContainer)return;const existingInputs=hiddenInputsContainer.querySelectorAll(".existing-file-input"),existingFilePaths=Array.from(existingInputs).map((input=>input.value));hiddenInputsContainer.querySelectorAll(".uploaded-file-input").forEach((input=>input.remove()));[...new Set(uploadedFiles)].forEach((function(filePath){if(existingFilePaths.includes(filePath))return;const input=document.createElement("input");input.type="hidden",input.name=hiddenInputName,input.value=filePath,input.className="uploaded-file-input",hiddenInputsContainer.appendChild(input)}))}function updateFormState(){activeUploads>0?submitButtons.forEach((btn=>{btn.disabled=!0,btn.dataset.originalText||(btn.dataset.originalText=btn.textContent),btn.innerHTML='<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" width="16" height="16" class="spinning-icon"><path fill="currentColor" d="M12,4V2A10,10 0 0,0 2,12H4A8,8 0 0,1 12,4Z"/></svg> Uploading...'})):submitButtons.forEach((btn=>{btn.disabled=!1,btn.dataset.originalText&&(btn.textContent=btn.dataset.originalText,delete btn.dataset.originalText)}))}function updateStatus(){if(!statusElement)return;const uploadingText=statusElement.querySelector(".uploading-text"),completedText=statusElement.querySelector(".completed-text"),errorText=statusElement.querySelector(".error-text");if(activeUploads>0)statusElement.style.display="block",uploadingText&&(uploadingText.style.display="inline"),completedText&&(completedText.style.display="none"),errorText&&(errorText.style.display="none");else if(failedFiles.length>0){if(statusElement.style.display="block",uploadingText&&(uploadingText.style.display="none"),completedText&&(completedText.style.display="none"),errorText){errorText.style.display="inline";const errorMessage=errorText.querySelector(".error-message");errorMessage&&(errorMessage.textContent=failedFiles.length+" file(s) failed to upload")}}else uploadedFiles.length>0?(statusElement.style.display="block",uploadingText&&(uploadingText.style.display="none"),completedText&&(completedText.style.display="inline"),errorText&&(errorText.style.display="none")):statusElement.style.display="none"}existingFiles&&existingFiles.length>0&&setTimeout((function(){var dz;dz=myFilex,existingFiles.forEach((function(filePath,index){const fileName=filePath.split("/").pop(),extension=fileName.split(".").pop().toLowerCase();let fileType="";fileType=["jpg","jpeg","png","gif","bmp","webp","svg"].includes(extension)?"image/"+("jpg"===extension?"jpeg":extension):"application/octet-stream";const mockFile={name:fileName,size:5e5,type:fileType,accepted:!0,processing:!1,upload:{progress:100},status:Dropzone.SUCCESS,tempPath:filePath,isExisting:!0};dz.emit("addedfile",mockFile),dz.emit("complete",mockFile),setTimeout((function(){if(mockFile.previewElement){const imageElement=mockFile.previewElement.querySelector(".dz-image");if(imageElement){const iconSvg=getFileIconSvg(fileName.split(".").pop().toLowerCase());imageElement.innerHTML=iconSvg}mockFile.previewElement.classList.remove("dz-error","dz-processing"),mockFile.previewElement.classList.add("dz-success","filex-preview-existing");const progressElement=mockFile.previewElement.querySelector(".dz-progress");progressElement&&(progressElement.style.display="none")}}),200)}))}),100),filexElement.addEventListener("click",(function(e){if(e.target.matches(".dz-remove")||e.target.closest(".dz-remove")){e.preventDefault(),e.stopPropagation();const preview=(e.target.matches(".dz-remove")?e.target:e.target.closest(".dz-remove")).closest(".dz-preview");preview&&preview._file&&myFilex.removeFile(preview._file)}if(e.target.matches(".dz-retry")||e.target.closest(".dz-retry")){e.preventDefault(),e.stopPropagation();const preview=(e.target.matches(".dz-retry")?e.target:e.target.closest(".dz-retry")).closest(".dz-preview");preview&&preview._file&&retryUpload(preview._file)}})),window[componentId]=myFilex,parentForm&&parentForm.addEventListener("submit",(function(e){if(filexElement.classList.contains("required")&&0===uploadedFiles.length)return e.preventDefault(),!1!==config.showErrorNotifications&&showErrorMessage("Please upload at least one file before submitting",componentId,config.errorTimeout),!1;if(activeUploads>0)return e.preventDefault(),!1!==config.showErrorNotifications&&showErrorMessage("Please wait for all files to finish uploading before submitting",componentId,config.errorTimeout),!1;if(failedFiles.length>0){e.preventDefault();const failedFileNames=failedFiles.map((f=>f.name)).join(", ");return!!confirm(`Some files failed to upload (${failedFileNames}). Do you want to continue without them?`)||(!1!==config.showErrorNotifications&&showErrorMessage("Please fix upload errors or remove failed files before submitting",componentId,config.errorTimeout),!1)}})),window[componentId+"_helpers"]={getUploadedFiles:()=>uploadedFiles,getFailedFiles:()=>failedFiles,retryFailedUploads:()=>{failedFiles.forEach((failed=>{retryUpload(failed.file)}))},clearAll:()=>{myFilex.removeAllFiles(),uploadedFiles=[],failedFiles=[],updateHiddenInputs(),updateStatus()}}}))}function getFileIconSvg(extension){return{pdf:'<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" width="48" height="48"><path fill="#dc3545" d="M14,2H6A2,2 0 0,0 4,4V20A2,2 0 0,0 6,22H18A2,2 0 0,0 20,20V8L14,2M18,20H6V4H13V9H18V20Z"/><text x="12" y="16" text-anchor="middle" fill="white" font-size="6" font-weight="bold">PDF</text></svg>',doc:'<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" width="48" height="48"><path fill="#2b579a" d="M14,2H6A2,2 0 0,0 4,4V20A2,2 0 0,0 6,22H18A2,2 0 0,0 20,20V8L14,2M18,20H6V4H13V9H18V20Z"/><text x="12" y="16" text-anchor="middle" fill="white" font-size="5" font-weight="bold">DOC</text></svg>',docx:'<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" width="48" height="48"><path fill="#2b579a" d="M14,2H6A2,2 0 0,0 4,4V20A2,2 0 0,0 6,22H18A2,2 0 0,0 20,20V8L14,2M18,20H6V4H13V9H18V20Z"/><text x="12" y="16" text-anchor="middle" fill="white" font-size="5" font-weight="bold">DOC</text></svg>',xls:'<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" width="48" height="48"><path fill="#107c41" d="M14,2H6A2,2 0 0,0 4,4V20A2,2 0 0,0 6,22H18A2,2 0 0,0 20,20V8L14,2M18,20H6V4H13V9H18V20Z"/><text x="12" y="16" text-anchor="middle" fill="white" font-size="6" font-weight="bold">XLS</text></svg>',xlsx:'<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" width="48" height="48"><path fill="#107c41" d="M14,2H6A2,2 0 0,0 4,4V20A2,2 0 0,0 6,22H18A2,2 0 0,0 20,20V8L14,2M18,20H6V4H13V9H18V20Z"/><text x="12" y="16" text-anchor="middle" fill="white" font-size="6" font-weight="bold">XLS</text></svg>',ppt:'<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" width="48" height="48"><path fill="#d24726" d="M14,2H6A2,2 0 0,0 4,4V20A2,2 0 0,0 6,22H18A2,2 0 0,0 20,20V8L14,2M18,20H6V4H13V9H18V20Z"/><text x="12" y="16" text-anchor="middle" fill="white" font-size="6" font-weight="bold">PPT</text></svg>',pptx:'<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" width="48" height="48"><path fill="#d24726" d="M14,2H6A2,2 0 0,0 4,4V20A2,2 0 0,0 6,22H18A2,2 0 0,0 20,20V8L14,2M18,20H6V4H13V9H18V20Z"/><text x="12" y="16" text-anchor="middle" fill="white" font-size="6" font-weight="bold">PPT</text></svg>',txt:'<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" width="48" height="48"><path fill="#6c757d" d="M14,2H6A2,2 0 0,0 4,4V20A2,2 0 0,0 6,22H18A2,2 0 0,0 20,20V8L14,2M18,20H6V4H13V9H18V20Z"/><text x="12" y="16" text-anchor="middle" fill="white" font-size="6" font-weight="bold">TXT</text></svg>',zip:'<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" width="48" height="48"><path fill="#6c757d" d="M14,17H12V15H14M14,13H12V11H14M12,9H14V7H12M12,19H14V17H12M14,2H6A2,2 0 0,0 4,4V20A2,2 0 0,0 6,22H18A2,2 0 0,0 20,20V8L14,2M18,20H6V4H13V9H18V20Z"/><text x="12" y="16" text-anchor="middle" fill="white" font-size="6" font-weight="bold">ZIP</text></svg>',jpg:'<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" width="48" height="48"><path fill="#6f42c1" d="M8.5,13.5L11,16.5L14.5,12L19,18H5M21,19V5C21,3.89 20.1,3 19,3H5A2,2 0 0,0 3,5V19A2,2 0 0,0 5,21H19A2,2 0 0,0 21,19Z"/></svg>',jpeg:'<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" width="48" height="48"><path fill="#6f42c1" d="M8.5,13.5L11,16.5L14.5,12L19,18H5M21,19V5C21,3.89 20.1,3 19,3H5A2,2 0 0,0 3,5V19A2,2 0 0,0 5,21H19A2,2 0 0,0 21,19Z"/></svg>',png:'<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" width="48" height="48"><path fill="#6f42c1" d="M8.5,13.5L11,16.5L14.5,12L19,18H5M21,19V5C21,3.89 20.1,3 19,3H5A2,2 0 0,0 3,5V19A2,2 0 0,0 5,21H19A2,2 0 0,0 21,19Z"/></svg>',mp3:'<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" width="48" height="48"><path fill="#20c997" d="M14,3.23V5.29C16.89,6.15 19,8.83 19,12C19,15.17 16.89,17.84 14,18.7V20.77C18,19.86 21,16.28 21,12C21,7.72 18,4.14 14,3.23M16.5,12C16.5,10.23 15.5,8.71 14,7.97V16C15.5,15.29 16.5,13.76 16.5,12M3,9V15H7L12,20V4L7,9H3Z"/></svg>',mp4:'<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" width="48" height="48"><path fill="#fd7e14" d="M17,10.5V7A1,1 0 0,0 16,6H4A1,1 0 0,0 3,7V17A1,1 0 0,0 4,18H16A1,1 0 0,0 17,17V13.5L21,17.5V6.5L17,10.5Z"/></svg>'}[extension.toLowerCase()]||'<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" width="48" height="48"><path fill="#6c757d" d="M14,2H6A2,2 0 0,0 4,4V20A2,2 0 0,0 6,22H18A2,2 0 0,0 20,20V8L14,2M18,20H6V4H13V9H18V20Z"/></svg>'}function getCSRFToken(){const metaTag=document.querySelector('meta[name="csrf-token"]');return metaTag?metaTag.getAttribute("content"):""}"loading"===document.readyState?document.addEventListener("DOMContentLoaded",initializeFilex):initializeFilex(),window.Filex={initialize:initializeFilex,getFileIconSvg:getFileIconSvg,makeAjaxRequest:makeAjaxRequest,showError:showErrorMessage,showSuccess:showSuccessMessage,showWarning:function(message,componentId=null,timeout=4e3){showNotification(message,"warning",componentId,timeout)},showInfo:function(message,componentId=null,timeout=3e3){showNotification(message,"info",componentId,timeout)},showNotification:showNotification,removeNotification:removeNotification,showErrorMessage:showErrorMessage,showSuccessMessage:showSuccessMessage}}(window,document);